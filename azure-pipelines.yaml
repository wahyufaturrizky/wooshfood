name: $(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)
trigger:
  branches:
    include:
        - development
        - main
  paths:
    exclude:
      - helm/**

pool: CloudProvider
  # vmImage: Ubuntu-latest

resources:
- repo: self

variables:
  - group: wooshfood-reference-global
  - name: DOCKER_BUILDKIT
    value: 1

stages:
  - stage: BuildDev
    condition: eq(variables['Build.SourceBranchName'], 'development')
    jobs:
    - job:
      displayName: Build
      steps:
      - task: Bash@3
        displayName: Build and Push Docker Images
        env:
          DO_TOKEN: $(DO_TOKEN)
        condition: or(eq(variables['Build.SourceBranchName'], 'development'), eq(variables['Build.SourceBranch'], 'refs/heads/operations/pipeline-update'))
        inputs:
          targetType: 'inline'
          script: |
            set -e
            # For development, use "booking-dev-<build number>" for VERSION_TAG
            VERSION_TAG=booking-dev-$(Build.BuildNumber)
            
            docker build . \
            -t registry.digitalocean.com/wooshfood/carwash-booking:$VERSION_TAG \
            -t registry.digitalocean.com/wooshfood/carwash-booking:booking-dev

            echo $DO_TOKEN | docker login registry.digitalocean.com -u "oauth" --password-stdin
            docker push registry.digitalocean.com/wooshfood/carwash-booking:$VERSION_TAG
            docker push registry.digitalocean.com/wooshfood/carwash-booking:booking-dev

      - task: Bash@3
        displayName: Deployment by ArgoCD
        env:
          GITHUB_PAT: $(GITHUB_PAT)
          ARGOCD_TOKEN: $(ARGOCD_TOKEN)
        inputs:
          targetType: 'inline'
          script: |
            set -e
            git config --global user.email "devops@wooshfood.com"
            git config --global user.name "Woosh DevOps"

            git clone https://$(GITHUB_PAT)@github.com/WooshFood-Dev/wooshfood-carwash-booking-infra.git
            cd wooshfood-carwash-booking-infra/argocd/environments/development
            git checkout development
            VERSION_TAG=booking-dev-$(Build.BuildNumber)
            echo "Updating image tag to $VERSION_TAG..."
            yq eval ".image.tag = \"$VERSION_TAG\"" -i values.yaml

            git add values.yaml
            git commit -m "ci: update image tag to $VERSION_TAG"
            git push origin development

            argocd login argo.tc.wooshfood.com --grpc-web --username $ARGOCD_USER --password $ARGOCD_TOKEN
            argocd app sync carwash-booking-dev

  - stage: BuildStaging
    condition: eq(variables['Build.SourceBranchName'], 'main')
    jobs:
    - job:
      displayName: Build
      steps:
      - task: Bash@3
        displayName: Build and Push Docker Images
        env:
          DO_TOKEN: $(DO_TOKEN)
        inputs:
          targetType: 'inline'
          script: |
            set -e
            VERSION_TAG=booking-stage-$(Build.BuildNumber)
            
            docker build . \
            -t registry.digitalocean.com/wooshfood/carwash-booking:$VERSION_TAG \
            -t registry.digitalocean.com/wooshfood/carwash-booking:booking-stage
    
            echo $DO_TOKEN | docker login registry.digitalocean.com -u "oauth" --password-stdin
            docker push registry.digitalocean.com/wooshfood/carwash-booking:$VERSION_TAG
            docker push registry.digitalocean.com/wooshfood/carwash-booking:booking-stage

            echo registry.digitalocean.com/wooshfood/carwash-booking:$VERSION_TAG > IMAGE_TAG.txt
            echo registry.digitalocean.com/wooshfood/carwash-booking:$VERSION_TAG
            echo $VERSION_TAG > VERSION_TAG.txt

      - task: Bash@3
        displayName: Deployment by ArgoCD
        env:
          GITHUB_PAT: $(GITHUB_PAT)
          ARGOCD_TOKEN: $(ARGOCD_TOKEN)
        inputs:
          targetType: 'inline'
          script: |
            set -e
            git config --global user.email "devops@wooshfood.com"
            git config --global user.name "Woosh DevOps"

            git clone https://$(GITHUB_PAT)@github.com/WooshFood-Dev/wooshfood-carwash-booking-infra.git
            cd wooshfood-carwash-booking-infra

            # Set version tag
            VERSION_TAG=booking-stage-$(Build.BuildNumber)
            echo "Updating image tag to $VERSION_TAG..."

            # === Checkout main branch, update values.yaml, and push ===
            git checkout main
            yq eval ".image.tag = \"$VERSION_TAG\"" -i argocd/environments/staging/values.yaml
            git add argocd/environments/staging/values.yaml
            git commit -m "ci: update image tag to $VERSION_TAG"
            git push origin main

            # === Checkout development branch, merge from main, and push ===
            git checkout development
            git merge main --no-edit
            git push origin development

      - task: PublishPipelineArtifact@1
        condition: succeeded()
        inputs:
          targetPath: '$(Pipeline.Workspace)'
          artifact: carwash-booking
          publishLocation: 'pipeline'
